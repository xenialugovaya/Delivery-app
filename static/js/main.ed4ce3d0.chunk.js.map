{"version":3,"sources":["Styles/GlobalStyle.js","Navbar/Navbar.js","QuantityInput/QuantityInput.js","Data/Data.js","FoodCard/FoodCard.js","Hooks/useQuantity.js","Menu/Menu.js","Cart/Cart.js","App.js","Hooks/useOpenCart.js","Hooks/useAddToCart.js","Hooks/useOrders.js","serviceWorker.js","index.js"],"names":["GlobalStyle","createGlobalStyle","NavbarStyle","styled","div","Logo","NavMenu","Navbar","setOpenCart","orders","amount","length","forEach","order","quantity","Grid","container","spacing","item","Icon","color","fontSize","Typography","variant","IconButton","aria-label","onClick","menuGrid","cartGrid","cartOpen","Badge","badgeContent","QuantityInputStyle","useStyles","makeStyles","input","width","height","marginLeft","textAlign","controls","background","opacity","QuantityInput","classes","className","setValue","value","disabled","FormControl","root","InputBase","onChange","formatUSDPrice","price","toLocaleString","style","currency","pizzas","title","priceUSD","shortDescription","description","image","theme","minWidth","media","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","FoodCard","index","parameters","setAddToCart","addToCart","setOrders","useState","event","target","useQuantity","id","React","expanded","setExpanded","addToCartClicked","setAddToCartClicked","Card","CardHeader","CardMedia","CardContent","component","CardActions","disableSpacing","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","MenuStyle","Menu","map","pizza","key","padding","position","top","bottom","right","display","flexDirection","button","maxWidth","content","open","list","justifyContent","Cart","action","ListItem","Divider","Button","App","openCart","useOpenCart","useAddToCart","useOrders","xs","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ed4ce3d0.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    background: #eee;\n  }\n`","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport {Badge} from '@material-ui/core';\nimport { IconButton } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { Icon } from '@material-ui/core';\nimport LocalPizzaTwoToneIcon from '@material-ui/icons/LocalPizzaTwoTone';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport styled from 'styled-components'\n\n\nconst NavbarStyle = styled.div`\n  position: fixed;\n  right: 0px;\n  left:0px;\n  background: white;\n  padding: 15px 25px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0px 15px 10px -15px #111;    \n`\nconst Logo = styled.div`\n  border-right: 1px solid grey;\n  padding-right: 25px;\n`\n\nconst NavMenu = styled.div`\n  border-left: 1px solid grey;\n  padding-left: 25px;\n`\n\nexport default function Navbar({setOpenCart, orders}){\n\n  let amount = 0;\n  if(orders.length === 0){\n    amount = 0;\n  } else {\n    orders.forEach((order) => {\n      amount += order.quantity;\n    });\n  }\n  \n  const handleCartClick = () => {\n    setOpenCart({menuGrid: 10, cartGrid: 2, cartOpen: true});\n  };\n\n    return (\n      <NavbarStyle>\n        <Logo>\n         <Grid container spacing={2}>\n            <Grid item>\n              <Icon color=\"primary\">\n                <LocalPizzaTwoToneIcon fontSize=\"large\"/>\n              </Icon>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"h4\">\n                Pizza\n              </Typography>\n              <Typography variant=\"overline\">\n                Delivery\n              </Typography>\n            </Grid>\n          </Grid>\n        </Logo>\n        <NavMenu>\n          <IconButton color=\"primary\" aria-label=\"add to shopping cart\" onClick={handleCartClick}>\n            <Badge badgeContent={amount} color=\"secondary\">\n              <AddShoppingCartIcon />\n            </Badge>\n          </IconButton>\n        </NavMenu>\n      </NavbarStyle>\n    )\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputBase from '@material-ui/core/InputBase';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\nimport RemoveOutlinedIcon from '@material-ui/icons/RemoveOutlined';\n\nconst QuantityInputStyle = styled.div`\n  background: #eee;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  height: 40px;\n`;\n\nconst useStyles = makeStyles(() => ({\n\n  input: {\n    width: '24px',\n    height: '40px',\n    marginLeft: '10px',\n    textAlign: 'center',\n  },\n  controls: {\n    '&:hover': {\n      background: 'transparent',\n    },\n    '&:disabled':{\n      opacity: 0.3,\n    }\n  }\n}));\n\nexport default function QuantityInput({quantity, onClick}){\n  const classes = useStyles();\n  const handleDecrementClick = () =>  {\n    quantity.setValue(quantity.value - 1);\n    onClick(quantity.value - 1);\n  };\n  const handleIncrementClick = () =>  {\n    quantity.setValue(quantity.value + 1);\n    onClick(quantity.value + 1);\n  };\n    return(\n      <QuantityInputStyle>\n      <IconButton className={classes.controls} onClick={handleDecrementClick} disabled={quantity.value === 1}>\n        <RemoveOutlinedIcon color='primary'/>\n      </IconButton>\n        <FormControl variant=\"filled\" className={classes.root}>   \n            <InputBase className={classes.input} value={quantity.value} onChange={quantity.onChange} />\n        </FormControl>\n      <IconButton className={classes.controls} onClick={handleIncrementClick}>\n        <AddOutlinedIcon color='primary'/>\n      </IconButton>\n      </QuantityInputStyle>\n    );\n}\n","export function formatUSDPrice(price) {\n  return price.toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  });\n}\n\nexport function formatEURPrice(price) {\n  return price.toLocaleString('de-DE', {\n    style: 'currency',\n    currency: 'EUR'\n  });\n}\n\nexport const pizzas = [{\n    title: 'pizza1',\n    priceUSD: 9.5,\n    shortDescription: 'amazing pizza',\n    description: 'amazing pizza',\n    image: '/images/pizza.png'\n  },\n  {\n    title: 'pizza2',\n    priceUSD: 7,\n    shortDescription: 'amazing pizza',\n    description: 'amazing pizza',\n    image: '/images/pizza2.jpeg'\n  },\n  {\n    title: 'pizza2',\n    priceUSD: 5.5,\n    shortDescription: 'amazing pizza',\n    description: 'amazing pizza',\n    image: '/images/pizza2.jpeg'\n  },\n  {\n    title: 'pizza2',\n    priceUSD: 8,\n    shortDescription: 'amazing pizza',\n    description: 'amazing pizza',\n    image: '/images/pizza2.jpeg'\n  },\n  {\n    title: 'pizza2',\n    priceUSD: 6.5,\n    shortDescription: 'amazing pizza',\n    description: 'amazing pizza',\n    image: '/images/pizza2.jpeg'\n  },\n  {\n    title: 'pizza2',\n    priceUSD: 7,\n    shortDescription: 'amazing pizza',\n    description: 'amazing pizza',\n    image: '/images/pizza2.jpeg'\n  },\n  {\n    title: 'pizza2',\n    priceUSD: 6.5,\n    shortDescription: 'amazing pizza',\n    description: 'amazing pizza',\n    image: '/images/pizza2.jpeg'\n  },\n  {\n    title: 'pizza2',\n    priceUSD: 6,\n    shortDescription: 'amazing pizza',\n    description: 'amazing pizza',\n    image: '/images/pizza2.jpeg'\n  },\n]","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport QuantityInput from '../QuantityInput/QuantityInput';\nimport useQuantity from '../Hooks/useQuantity';\nimport { formatUSDPrice } from '../Data/Data';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: '300px',\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n}));\n\nexport default function FoodCard({index, parameters, setAddToCart, addToCart, setOrders, orders}) {\n  const {title, priceUSD, shortDescription, description, image} = parameters;\n  const quantity = useQuantity();\n\n\n  const order = {\n    id: index,\n    title,\n    priceUSD,\n    quantity: quantity.value\n  }\n\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const [addToCartClicked, setAddToCartClicked] = React.useState(false);\n\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  const handleAddToCartClick = () => {\n    setAddToCart(addToCart + 1);\n    setOrders([...orders, order]);\n    setAddToCartClicked(true);\n  };\n\n  const handleQuantityClick = (value) => {\n    orders.forEach((order) => {\n      if(order.id === index){\n        order.quantity = value;\n      }\n    });\n    setOrders([...orders]);\n  }\n  \n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        title={title}\n      />\n      <CardMedia\n        className={classes.media}\n        image={image}\n        title={title}\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n           {shortDescription}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        {\n        !addToCartClicked \n        ? <IconButton aria-label=\"add to cart\" onClick={handleAddToCartClick}>\n            <AddCircleIcon fontSize=\"large\" color=\"primary\" />\n          </IconButton>\n        : <QuantityInput quantity={quantity} onClick={handleQuantityClick}/>\n        }\n        <Typography>\n          {formatUSDPrice(priceUSD)}\n        </Typography>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>\n             {description}\n          </Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}","import { useState } from 'react';\n\nexport default function useQuantity(quantity = 1){\n  const [value, setValue] = useState(quantity);\n\n  function onChange(event){\n    if (!(+event.target.value >= 1)) {\n       setValue(1);\n       return;\n    }\n     setValue(+event.target.value);\n  }\n\n  return{\n    value,\n    setValue,\n    onChange\n  };\n} ","import React from 'react';\nimport styled from 'styled-components'\nimport { Grid } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport FoodCard from '../FoodCard/FoodCard';\nimport { pizzas } from '../Data/Data';\n \n\nconst MenuStyle = styled.div`\n  padding: 120px 60px;\n`\n\nexport default function Menu({setAddToCart, addToCart, setOrders, orders}) {\n    return(\n      <MenuStyle>\n        <Typography variant=\"h2\" component=\"h1\">\n          Menu\n        </Typography>\n        <Grid container spacing={2}>\n          {pizzas.map((pizza, index) => {\n            return(\n            <Grid item key={index}>\n              <FoodCard index={index} parameters={pizza} setAddToCart={setAddToCart} addToCart={addToCart} setOrders={setOrders} orders={orders}/>\n            </Grid> \n            )\n          })}    \n        </Grid>\n      </MenuStyle>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Button } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { IconButton } from '@material-ui/core';\nimport { Divider } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport clsx from 'clsx';\nimport { formatUSDPrice } from '../Data/Data';\n\n\nconst useStyles = makeStyles({\n  root: {\n    padding: '20px',\n    position: 'fixed',\n    width: '320px',\n    top: '102px',\n    bottom: '0px',\n    right: '0px',\n    display: 'none',\n    flexDirection: 'column',\n  },\n  button: {\n    maxWidth: '300px',\n  },\n  content: {\n    height: '100%', \n    display: 'flex',\n    flexDirection: 'column',\n  },\n  open:{\n    display: 'flex',\n  },\n  list: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n});\n\nfunction getPrice(price, quantity){\n  return price * quantity;\n}\n\nexport default function Cart({cartOpen, orders}) {\n  let open = cartOpen;\n  const classes = useStyles();\n \n     return(\n      <Card className={clsx(classes.root, {\n        [classes.open]: open,\n      })}>\n        <CardHeader \n         title=\"Your order\"\n         action={\n          <IconButton aria-label=\"close\">\n            <HighlightOffIcon />\n          </IconButton>\n          } \n        />       \n          {orders.length === 0 \n            ? <CardContent className={classes.content}>\n                <Typography variant=\"overline\">\n                  Your cart is empty\n                </Typography>  \n              </CardContent>\n            : <>\n                <CardContent className={classes.content}>\n                  {orders.map((order) => (\n                    <>\n                    <ListItem className={classes.list}>\n                    <Typography variant=\"overline\">\n                        {order.quantity} \n                      </Typography>   \n                      <Typography variant=\"overline\">\n                        {order.title} \n                      </Typography>  \n                      <Typography variant=\"overline\">\n                        {formatUSDPrice(getPrice(order.priceUSD, order.quantity))} \n                      </Typography> \n                   </ListItem> \n                   <Divider/>\n                   </>\n                  ))}\n                </CardContent>\n                <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                  Proceed to checkout\n                </Button> \n              </>\n          } \n      </Card>        \n     );\n}","import React from 'react';\nimport { GlobalStyle } from './Styles/GlobalStyle'\nimport { Grid } from '@material-ui/core';\nimport Navbar from './Navbar/Navbar';\nimport Menu from './Menu/Menu';\nimport Cart from './Cart/Cart';\nimport useOpenCart from './Hooks/useOpenCart';\nimport useAddToCart from './Hooks/useAddToCart';\nimport useOrders from './Hooks/useOrders';\n\nfunction App() {\nconst {openCart, setOpenCart} = useOpenCart();\nconst addToCart = useAddToCart();\nconst orders = useOrders();\n\n  return (\n    <>\n    <GlobalStyle/>\n    <Navbar setOpenCart = {setOpenCart} {...orders}/>\n    <Grid container>\n      <Grid item xs={openCart.menuGrid}>\n        <Menu {...addToCart} {...orders}/>\n      </Grid>\n      <Grid item xs={openCart.cartGrid}>\n        <Cart cartOpen={openCart.cartOpen} {...orders}/>\n      </Grid>      \n    </Grid>\n   </>\n  );\n}\n\nexport default App;\n","import { useState } from 'react';\n\nexport default function useOpenCart(){\n    const [openCart, setOpenCart] = useState({ menuGrid: 12, cartGrid: false, cartOpen: false });\n    return {\n        openCart,\n        setOpenCart\n    }\n}","import { useState } from 'react';\n\nexport default function useAddToCart(){\n    const [addToCart, setAddToCart] = useState(0);\n    return {\n        addToCart,\n        setAddToCart\n    }\n}","import { useState } from 'react';\n\nexport default function useOrders(){\n    const [orders, setOrders] = useState([]);\n    return {\n        orders,\n        setOrders\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}